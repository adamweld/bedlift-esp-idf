#pragma once

#include <cstdint>

// ============================================================================
// Icon Bitmap Data
// ============================================================================
// Icons are stored as monochrome bitmaps (1 bit per pixel)
// Format: Width, Height, followed by byte array
// Use scripts/icon_converter.py to generate these from image files
//
// Example usage:
//   display.drawBitmap(x, y, icon_manual_width, icon_manual_height, icon_manual_data);
// ============================================================================

// Placeholder icons - to be replaced with actual icon data

// MANUAL mode icon (placeholder)
constexpr int icon_manual_width = 32;
constexpr int icon_manual_height = 32;
constexpr uint8_t icon_manual_data[] = {
    // Placeholder: simple hand icon pattern
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x7E, 0x00, 0x00,
    0x00, 0xFF, 0x00, 0x00,
    0x01, 0xFF, 0x80, 0x00,
    0x03, 0xFF, 0xC0, 0x00,
    0x07, 0xFF, 0xE0, 0x00,
    0x0F, 0xFF, 0xF0, 0x00,
    0x1F, 0xFF, 0xF8, 0x00,
    // ... (fill in remaining bytes for 32x32 = 128 bytes total)
};

// AUTO mode icon (placeholder)
constexpr int icon_auto_width = 32;
constexpr int icon_auto_height = 32;
constexpr uint8_t icon_auto_data[] = {
    // Placeholder: gear/cog icon pattern
    0x00, 0x00, 0x00, 0x00,
    // ... (to be generated by icon_converter.py)
};

// PRESET mode icon (placeholder)
constexpr int icon_preset_width = 32;
constexpr int icon_preset_height = 32;
constexpr uint8_t icon_preset_data[] = {
    // Placeholder: bookmark icon pattern
    0x00, 0x00, 0x00, 0x00,
    // ... (to be generated by icon_converter.py)
};

// LEVEL mode icon (placeholder)
constexpr int icon_level_width = 32;
constexpr int icon_level_height = 32;
constexpr uint8_t icon_level_data[] = {
    // Placeholder: bubble level icon pattern
    0x00, 0x00, 0x00, 0x00,
    // ... (to be generated by icon_converter.py)
};

// ============================================================================
// Icon Helper Functions
// ============================================================================

// Get icon data for a specific mode
inline const uint8_t* getIconForMode(int mode, int& width, int& height) {
    switch (mode) {
        case 0: // MANUAL
            width = icon_manual_width;
            height = icon_manual_height;
            return icon_manual_data;
        case 1: // AUTO
            width = icon_auto_width;
            height = icon_auto_height;
            return icon_auto_data;
        case 2: // PRESET_1
        case 3: // PRESET_2
            width = icon_preset_width;
            height = icon_preset_height;
            return icon_preset_data;
        case 4: // LEVEL
            width = icon_level_width;
            height = icon_level_height;
            return icon_level_data;
        default:
            width = 0;
            height = 0;
            return nullptr;
    }
}
